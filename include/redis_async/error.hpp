//
// Created by niko on 23.05.2021.
//

#ifndef REDIS_ASYNC_ERROR_HPP
#define REDIS_ASYNC_ERROR_HPP

#include <stdexcept>
#include <system_error>

namespace redis_async {
    namespace error {

        enum class errc {
            wrong_introduction = 1,
            parser_error,
            count_conversion,
            count_range,
            bulk_terminator,
            not_enough_data
        };

        class category : public std::error_category {
        public:
            const char *name() const noexcept override;
            std::string message(int ev) const override;
        };

        static inline category const &get_error_category() {
            static category const cat;
            return cat;
        }

        std::error_code make_error_code(errc e);

        /**
         * @brief Base class for exceptions generated by the library
         */
        class rd_error : public std::runtime_error {
        public:
            explicit rd_error(const std::string &msg);
            explicit rd_error(const char *msg);
        };

        /**
         * @brief Connection with the database server failure.
         * Includes network and authentication failures.
         */
        class connection_error : public rd_error {
        public:
            explicit connection_error(const std::string &msg);
            explicit connection_error(const char *msg);
        };

        /**
         * @brief An error generated by the Redis server when executing a query.
         */
        class query_error : public rd_error {
        public:
            explicit query_error(const std::string &msg);
            explicit query_error(const char *msg);
        };

        /**
         * @brief An exception was caught in a callback.
         * @see @ref errors
         * @see @ref callbacks
         */
        class client_error : public rd_error {
        public:
            explicit client_error(const std::string &msg);
            explicit client_error(const char *msg);
            explicit client_error(const std::exception &e);
        };

    } // namespace error
} // namespace redis_async

#endif // REDIS_ASYNC_ERROR_HPP
